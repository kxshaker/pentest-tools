#!/usr/bin/env python

import subprocess # module for running processes on operating system
import optparse   # module for parsing operating system output
import re         # module for regEX

def get_options():
    # Using the OptionParser method from the optparser object.
    parser = optparse.OptionParser()
    # Creating Options for the user for the interface and the new mac address with the add_option factory funtion.
    parser.add_option("-i","--interface",dest="interface",help="Interface to change it's MAC Address.")
    parser.add_option("-m","--MAC",dest="new_mac",help="New MAC Address.")
    options, args = parser.parse_args()
    # Error handeling
    if not options.interface:
        parser.error("[-] Please enter a valid interface")
    elif not options.new_mac:
        parser.error("[-] Please enter a MAC address")
    # Parsing then returning user input commands.
    return options

def change_mac(interface, new_mac):
    # main function for Changing MAC address.
    print("[+] Disconnecting "+ interface)
    subprocess.run(["ifconfig", interface, "down"])
    print("[+] Changing MAC address...")
    subprocess.run(["ifconfig", interface, "hw", "ether", new_mac])
    print("[+] MAC address changed to : "+ new_mac)
    print("[+] Reconnecting "+interface)
    subprocess.run(["ifconfig", interface, "up"])

def get_current_MAC(interface):
    # Check ifconfig interface current MAC address for validity (like lo interfaces etc..)
    ifconfig = subprocess.check_output(["ifconfig", interface])
    current_MAC = re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", str(ifconfig))
    if current_MAC:
        return current_MAC.group(0)
    else:
        print("[-] Error reading MAC Address")


# Get usr input arguments for parser and saving them
options = get_options()
print("[+] "+options.interface+" MAC address : " + get_current_MAC(options.interface))

change_mac(options.interface, options.new_mac)

if get_current_MAC(options.interface) == options.new_mac:
    print("[+] MAC Spoofing has finished successfully!")
else:
    print("[-] MAC Spoofing has Failed!")