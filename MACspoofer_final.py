# CHBANG
# mac changer
# get user inputs
# check for errors

#!/usr/bin/env python

import subprocess # module for running processes on operating system
import argparse   # module for parsing operating system output
import re         # module for regEX


def mac_spoof(interface, mac_add):
    print("[+] Disconnecting " + interface)
    subprocess.run(["ifconfig", interface, "down"])
    print("[+] Spoofing MAC address...")
    subprocess.run(["ifconfig", interface, "hw", "ether", mac_add])
    print("[+] Reconnecting interface")
    subprocess.run(["ifconfig", interface, "up"])

def get_options():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--interface", dest="interface", help="Select Interface.")
    parser.add_argument("-m", "--mac", dest="macADD", help="Choose new mac address")
    options = parser.parse_args()
    if not options.interface:
        parser.error("Please enter a valid interface to work with!!!")
    elif not options.macADD:
        parser.error("Please enter a valid MAC address!!!")
    return options

def mac_change_chk(interface):
    ifconfig = subprocess.check_output(["ifconfig", interface])
    new_mac  = re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", str(ifconfig))
    return new_mac.group(0)




options = get_options()
new_mac = mac_change_chk(options.interface)
mac_spoof(options.interface,options.macADD)

if mac_change_chk(options.interface) == options.macADD:
    print("[+] MAC address was changed to "+ new_mac +" successfully!!!")
else:
    print("[-] MAC address spoofing FAILED!!!")


